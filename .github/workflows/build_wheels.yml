name: Build Wheels
on: [workflow_dispatch]

env:
  CIBW_BUILD_VERBOSITY: 2
  CIBW_ARCHS_LINUX: x86_64
  CIBW_ARCHS_WINDOWS: AMD64
  CIBW_ARCHS_MACOS: universal2
  CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
  CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
  CMAKE_BUILD_PARALLEL_LEVEL: 1
  DISTUTILS_USE_SDK: 1
  MSSdk: 1


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [reticula-build-ubuntu-22.04, reticula-build-windows-2022]

    steps:
      - name: Collect Workflow Telemetry
        uses: runforesight/workflow-telemetry-action@v1
        with:
          theme: dark

      - uses: actions/checkout@v3

      - name: Set up Visual Studio shell on Windows
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: set x64 cl.exe as CXX
        if: ${{ matrix.os == "reticula-build-windows-2022" }}
        run: |
          "CXX=$((Get-Command cl).Path)" >> "$GITHUB_ENV"
          "CC=$((Get-Command cl).Path)" >> "$GITHUB_ENV"

      - name: Build Wheels
        uses: pypa/cibuildwheel@v2.12.3

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
